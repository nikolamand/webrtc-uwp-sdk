
jobs:
  - job: webrtc_build
      
    pool:
      name: Hosted VS2017

    timeoutInMinutes: 0 #Timeout for build, 0 min makes the timeout use maximum value(60 min for private repo and 360 min for a public one)
    cancelTimeoutInMinutes: 0

    steps:
    - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
      submodules: recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
      # clean: boolean  # whether to fetch clean each time
      # fetchDepth: 15  # the depth of commits to ask Git to fetch
      # lfs: boolean  # whether to download Git-LFS files
      # path: string  # path to check out source code, relative to the agent's build directory (e.g. \_work\1)
      # persistCredentials: boolean  # set to 'true' to leave the OAuth token in the Git config after the initial fetch

    - task: UsePythonVersion@0
      displayName: 'Use Python 2.x'
      inputs:
        versionSpec: 2.x

    - task: PythonScript@0
      displayName: 'Build'
      inputs:
        scriptPath: '$(Build.SourcesDirectory)/scripts/run.py'
        arguments: '-a prepare build -t webrtc -p winuwp -x x64 -c debug'
        workingDirectory: '$(Build.SourcesDirectory)'
        
    - script: |
        echo Removing Intermediates
        
        if exist "%Build_SourcesDirectory%\webrtc\windows\solutions\Build\Intermediate" rmdir %Build_SourcesDirectory%\webrtc\windows\solutions\Build\Intermediate /S /Q
        
        if exist "%Build_SourcesDirectory%\webrtc\xplatform\webrtc\out" rmdir %Build_SourcesDirectory%\webrtc\xplatform\webrtc\out /S /Q
      displayName: 'Cleaning up intermediates'
      
    - task: PythonScript@0
      displayName: 'Build'
      inputs:
        scriptPath: '$(Build.SourcesDirectory)/scripts/run.py'
        arguments: '-a prepare build -t webrtc -p winuwp -x x86 -c debug'
        workingDirectory: '$(Build.SourcesDirectory)'
